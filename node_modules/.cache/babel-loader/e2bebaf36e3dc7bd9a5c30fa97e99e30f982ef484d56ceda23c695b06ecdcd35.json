{"ast":null,"code":"var _jsxFileName = \"/Users/matthew/Desktop/pm-test-react-2/src/components/Attributes/Attributes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Attributes = props => {\n  _s();\n  const {\n    attr_list,\n    attributes,\n    setAttributes,\n    abilityModifiers,\n    totalAttPoints,\n    setTotalAttPoints\n  } = props;\n  const handleIncrement = attribute => {\n    const updatedAttributes = {\n      ...attributes,\n      [attribute]: attributes[attribute] + 1\n    };\n    setAttributes(updatedAttributes);\n  };\n  const handleDecrement = attribute => {\n    const updatedAttributes = {\n      ...attributes,\n      [attribute]: Math.max(attributes[attribute] - 1, 1)\n    };\n    setAttributes(updatedAttributes);\n  };\n  console.log(attributes);\n  useEffect(() => {\n    const totalArr = [];\n    attributes.forEach(attribute => console.log(attribute));\n  }, [attributes]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Attributes: \", totalAttPoints]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), attr_list.map(attribute => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [`${attribute}: `, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: attributes[attribute]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDecrement(attribute),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleIncrement(attribute),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Ability Modifier: \", abilityModifiers[attribute]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)\n    }, attribute, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n};\n_s(Attributes, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Attributes;\nexport default Attributes;\nvar _c;\n$RefreshReg$(_c, \"Attributes\");","map":{"version":3,"names":["React","useEffect","Attributes","props","attr_list","attributes","setAttributes","abilityModifiers","totalAttPoints","setTotalAttPoints","handleIncrement","attribute","updatedAttributes","handleDecrement","Math","max","console","log","totalArr","forEach","map"],"sources":["/Users/matthew/Desktop/pm-test-react-2/src/components/Attributes/Attributes.js"],"sourcesContent":["import React, { useEffect } from 'react'\n\n\nconst Attributes = (props) => {\n\n    const { attr_list, attributes, setAttributes, abilityModifiers, totalAttPoints, setTotalAttPoints } = props\n\n    \n\n\n    const handleIncrement = (attribute) => {\n        const updatedAttributes = { ...attributes, [attribute]: attributes[attribute] + 1, };\n        setAttributes(updatedAttributes);\n    };\n\n    const handleDecrement = (attribute) => {\n        const updatedAttributes = { ...attributes, [attribute]: Math.max(attributes[attribute] - 1, 1), };\n        setAttributes(updatedAttributes);\n    };\n\n    console.log(attributes)\n\n    useEffect(() => {\n        const totalArr = []\n        attributes.forEach((attribute) => (\n            console.log(attribute)\n        ))\n\n    }, [attributes])\n\n    return (\n        <>\n            <h2>Attributes: {totalAttPoints}</h2>\n            {attr_list.map((attribute) => (\n                <div key={attribute}>\n                    <div>{`${attribute}: `}\n                        <span>{attributes[attribute]}</span>\n                        <button onClick={() => handleDecrement(attribute)}>-</button>\n                        <button onClick={() => handleIncrement(attribute)}>+</button>\n                        <div>Ability Modifier: {abilityModifiers[attribute]}</div>\n\n                    </div>\n\n                </div>\n            ))}\n            \n        </>\n    );\n};\n\nexport default Attributes"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAA;AAAA;AAGxC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAA;EAE1B,MAAM;IAAEC,SAAS;IAAEC,UAAU;IAAEC,aAAa;IAAEC,gBAAgB;IAAEC,cAAc;IAAEC;EAAkB,CAAC,GAAGN,KAAK;EAK3G,MAAMO,eAAe,GAAIC,SAAS,IAAK;IACnC,MAAMC,iBAAiB,GAAG;MAAE,GAAGP,UAAU;MAAE,CAACM,SAAS,GAAGN,UAAU,CAACM,SAAS,CAAC,GAAG;IAAG,CAAC;IACpFL,aAAa,CAACM,iBAAiB,CAAC;EACpC,CAAC;EAED,MAAMC,eAAe,GAAIF,SAAS,IAAK;IACnC,MAAMC,iBAAiB,GAAG;MAAE,GAAGP,UAAU;MAAE,CAACM,SAAS,GAAGG,IAAI,CAACC,GAAG,CAACV,UAAU,CAACM,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC;IAAG,CAAC;IACjGL,aAAa,CAACM,iBAAiB,CAAC;EACpC,CAAC;EAEDI,OAAO,CAACC,GAAG,CAACZ,UAAU,CAAC;EAEvBJ,SAAS,CAAC,MAAM;IACZ,MAAMiB,QAAQ,GAAG,EAAE;IACnBb,UAAU,CAACc,OAAO,CAAER,SAAS,IACzBK,OAAO,CAACC,GAAG,CAACN,SAAS,CACxB,CAAC;EAEN,CAAC,EAAE,CAACN,UAAU,CAAC,CAAC;EAEhB,oBACI;IAAA,wBACI;MAAA,WAAI,cAAY,EAACG,cAAc;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,EACpCJ,SAAS,CAACgB,GAAG,CAAET,SAAS,iBACrB;MAAA,uBACI;QAAA,WAAO,GAAEA,SAAU,IAAG,eAClB;UAAA,UAAON,UAAU,CAACM,SAAS;QAAC;UAAA;UAAA;UAAA;QAAA,QAAQ,eACpC;UAAQ,OAAO,EAAE,MAAME,eAAe,CAACF,SAAS,CAAE;UAAA,UAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAAS,eAC7D;UAAQ,OAAO,EAAE,MAAMD,eAAe,CAACC,SAAS,CAAE;UAAA,UAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAAS,eAC7D;UAAA,WAAK,oBAAkB,EAACJ,gBAAgB,CAACI,SAAS,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA;IAExD,GAPAA,SAAS;MAAA;MAAA;MAAA;IAAA,QAUtB,CAAC;EAAA,gBAEH;AAEX,CAAC;AAAC,GA7CIT,UAAU;AAAA,KAAVA,UAAU;AA+ChB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
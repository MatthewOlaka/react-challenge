{"ast":null,"code":"var _jsxFileName = \"/Users/matthew/Desktop/pm-test-react/src/components/Classes/Classes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ATTRIBUTE_LIST, CLASS_LIST } from '../../consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Classes(_ref) {\n  _s();\n  let {\n    attributes\n  } = _ref;\n  const [selectedClass, setSelectedClass] = useState(null);\n  const meetsRequirements = className => {\n    const classRequirements = CLASS_LIST[className];\n    for (const [attribute, value] of Object.entries(classRequirements)) {\n      if (attributes[attribute] < value) {\n        return false;\n      }\n    }\n    return true;\n  };\n  const handleClick = className => {\n    const classRequirements = CLASS_LIST[className];\n    /* const requiredAttributes = {};\n    for (const attribute of ATTRIBUTE_LIST) {\n        if (classRequirements[attribute]) {\n            requiredAttributes[attribute] = classRequirements[attribute];\n        } else {\n            requiredAttributes[attribute] = 0;\n        }\n    } */\n    setSelectedClass(className);\n    console.log(`${className} requirements:`, classRequirements);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [className, \": \", classRequirements]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Classes:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(CLASS_LIST).map(className => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: meetsRequirements(className) ? 'red' : 'white'\n        },\n        onClick: () => handleClick(className),\n        children: className\n      }, className, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), selectedClass && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Minimum Requirements for \", selectedClass]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), Object.entries(CLASS_LIST[selectedClass]).map(_ref2 => {\n        let [attribute, value] = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [attribute, \": \", value]\n        }, attribute, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(Classes, \"q640sDw8TaB3Vt2AO0jY3D3Av2w=\");\n_c = Classes;\nexport default Classes;\nvar _c;\n$RefreshReg$(_c, \"Classes\");","map":{"version":3,"names":["React","useState","ATTRIBUTE_LIST","CLASS_LIST","Classes","attributes","selectedClass","setSelectedClass","meetsRequirements","className","classRequirements","attribute","value","Object","entries","handleClick","console","log","keys","map","color"],"sources":["/Users/matthew/Desktop/pm-test-react/src/components/Classes/Classes.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { ATTRIBUTE_LIST, CLASS_LIST } from '../../consts';\n\nfunction Classes({ attributes }) {\n\n    const [selectedClass, setSelectedClass] = useState(null);\n\n    const meetsRequirements = (className) => {\n        const classRequirements = CLASS_LIST[className];\n        for (const [attribute, value] of Object.entries(classRequirements)) {\n            if (attributes[attribute] < value) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    const handleClick = (className) => {\n        const classRequirements = CLASS_LIST[className];\n        /* const requiredAttributes = {};\n        for (const attribute of ATTRIBUTE_LIST) {\n            if (classRequirements[attribute]) {\n                requiredAttributes[attribute] = classRequirements[attribute];\n            } else {\n                requiredAttributes[attribute] = 0;\n            }\n        } */\n        setSelectedClass(className);\n        console.log(`${className} requirements:`, classRequirements);\n        return (\n            <div>\n                <p>{className}: {classRequirements}</p>\n            </div>\n        );\n    };\n\n\n    return (\n        <div>\n            <h2>Classes:</h2>\n            <div>\n                {Object.keys(CLASS_LIST).map((className) => (\n                    <div key={className} style={{ color: meetsRequirements(className) ? 'red' : 'white' }} onClick={() => handleClick(className)}>\n                        {className}\n                    </div>\n                ))}\n            </div>\n            {selectedClass && (\n                <div>\n                    <h3>Minimum Requirements for {selectedClass}</h3>\n\n                    {Object.entries(CLASS_LIST[selectedClass]).map(([attribute, value]) => (\n                        <div key={attribute}>\n                            {attribute}: {value}\n                        </div>\n                    ))}\n\n                </div>\n            )}\n        </div>\n\n\n    );\n}\n\n\nexport default Classes"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,EAAEC,UAAU,QAAQ,cAAc;AAAC;AAE1D,SAASC,OAAO,OAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAW,CAAC;EAE3B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMO,iBAAiB,GAAIC,SAAS,IAAK;IACrC,MAAMC,iBAAiB,GAAGP,UAAU,CAACM,SAAS,CAAC;IAC/C,KAAK,MAAM,CAACE,SAAS,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACJ,iBAAiB,CAAC,EAAE;MAChE,IAAIL,UAAU,CAACM,SAAS,CAAC,GAAGC,KAAK,EAAE;QAC/B,OAAO,KAAK;MAChB;IACJ;IACA,OAAO,IAAI;EACf,CAAC;EAED,MAAMG,WAAW,GAAIN,SAAS,IAAK;IAC/B,MAAMC,iBAAiB,GAAGP,UAAU,CAACM,SAAS,CAAC;IAC/C;AACR;AACA;AACA;AACA;AACA;AACA;AACA;IACQF,gBAAgB,CAACE,SAAS,CAAC;IAC3BO,OAAO,CAACC,GAAG,CAAE,GAAER,SAAU,gBAAe,EAAEC,iBAAiB,CAAC;IAC5D,oBACI;MAAA,uBACI;QAAA,WAAID,SAAS,EAAC,IAAE,EAACC,iBAAiB;MAAA;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACrC;EAEd,CAAC;EAGD,oBACI;IAAA,wBACI;MAAA,UAAI;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK,eACjB;MAAA,UACKG,MAAM,CAACK,IAAI,CAACf,UAAU,CAAC,CAACgB,GAAG,CAAEV,SAAS,iBACnC;QAAqB,KAAK,EAAE;UAAEW,KAAK,EAAEZ,iBAAiB,CAACC,SAAS,CAAC,GAAG,KAAK,GAAG;QAAQ,CAAE;QAAC,OAAO,EAAE,MAAMM,WAAW,CAACN,SAAS,CAAE;QAAA,UACxHA;MAAS,GADJA,SAAS;QAAA;QAAA;QAAA;MAAA,QAGtB;IAAC;MAAA;MAAA;MAAA;IAAA,QACA,EACLH,aAAa,iBACV;MAAA,wBACI;QAAA,WAAI,2BAAyB,EAACA,aAAa;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,EAEhDO,MAAM,CAACC,OAAO,CAACX,UAAU,CAACG,aAAa,CAAC,CAAC,CAACa,GAAG,CAAC;QAAA,IAAC,CAACR,SAAS,EAAEC,KAAK,CAAC;QAAA,oBAC9D;UAAA,WACKD,SAAS,EAAC,IAAE,EAACC,KAAK;QAAA,GADbD,SAAS;UAAA;UAAA;UAAA;QAAA,QAEb;MAAA,CACT,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAGT;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAId;AAAC,GA5DQP,OAAO;AAAA,KAAPA,OAAO;AA+DhB,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
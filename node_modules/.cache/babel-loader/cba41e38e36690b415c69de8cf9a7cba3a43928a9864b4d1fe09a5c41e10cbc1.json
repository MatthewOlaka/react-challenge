{"ast":null,"code":"var _jsxFileName = \"/Users/matthew/Desktop/pm-test-react/src/components/Classes/Classes.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { ATTRIBUTE_LIST, CLASS_LIST } from '../../consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Classes(_ref) {\n  _s();\n  let {\n    attributes\n  } = _ref;\n  const [selectedClass, setSelectedClass] = useState(null);\n  const meetsRequirements = className => {\n    const classRequirements = CLASS_LIST[className];\n    for (const [attribute, value] of Object.entries(classRequirements)) {\n      if (attributes[attribute] < value) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /* const handleClick = (className) => {\n      const classRequirements = CLASS_LIST[className];\n      const requiredAttributes = {};\n      for (const attribute of ATTRIBUTE_LIST) {\n          if (classRequirements[attribute]) {\n              requiredAttributes[attribute] = classRequirements[attribute];\n          } else {\n              requiredAttributes[attribute] = 0;\n          }\n      }\n      \n  }; */\n  const handleClick = className => {\n    const classRequirements = CLASS_LIST[className];\n    const requiredAttributes = {};\n    for (const attribute of ATTRIBUTE_LIST) {\n      if (classRequirements[attribute]) {\n        requiredAttributes[attribute] = classRequirements[attribute];\n      } else {\n        requiredAttributes[attribute] = 0;\n      }\n    }\n    setSelectedClass(className);\n    console.log(`${className} requirements:`, requiredAttributes);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [className, \": \", requiredAttributes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Classes:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(CLASS_LIST).map(className => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: meetsRequirements(className) ? 'red' : 'white'\n        },\n        onClick: () => handleClick(className),\n        children: className\n      }, className, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), selectedClass && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Minimum Requirements for \", selectedClass]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), Object.entries(CLASS_LIST[selectedClass]).map(_ref2 => {\n        let [attribute, value] = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [attribute, \": \", value]\n        }, attribute, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(Classes, \"q640sDw8TaB3Vt2AO0jY3D3Av2w=\");\n_c = Classes;\nexport default Classes;\nvar _c;\n$RefreshReg$(_c, \"Classes\");","map":{"version":3,"names":["React","ATTRIBUTE_LIST","CLASS_LIST","Classes","attributes","selectedClass","setSelectedClass","useState","meetsRequirements","className","classRequirements","attribute","value","Object","entries","handleClick","requiredAttributes","console","log","keys","map","color"],"sources":["/Users/matthew/Desktop/pm-test-react/src/components/Classes/Classes.js"],"sourcesContent":["import React from 'react'\nimport { ATTRIBUTE_LIST, CLASS_LIST } from '../../consts';\n\nfunction Classes({ attributes }) {\n\n    const [selectedClass, setSelectedClass] = useState(null);\n\n    const meetsRequirements = (className) => {\n        const classRequirements = CLASS_LIST[className];\n        for (const [attribute, value] of Object.entries(classRequirements)) {\n            if (attributes[attribute] < value) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /* const handleClick = (className) => {\n        const classRequirements = CLASS_LIST[className];\n        const requiredAttributes = {};\n        for (const attribute of ATTRIBUTE_LIST) {\n            if (classRequirements[attribute]) {\n                requiredAttributes[attribute] = classRequirements[attribute];\n            } else {\n                requiredAttributes[attribute] = 0;\n            }\n        }\n        \n    }; */\n    const handleClick = (className) => {\n        const classRequirements = CLASS_LIST[className];\n        const requiredAttributes = {};\n        for (const attribute of ATTRIBUTE_LIST) {\n            if (classRequirements[attribute]) {\n                requiredAttributes[attribute] = classRequirements[attribute];\n            } else {\n                requiredAttributes[attribute] = 0;\n            }\n        }\n        setSelectedClass(className);\n        console.log(`${className} requirements:`, requiredAttributes);\n        return (\n            <div>\n                <p>{className}: {requiredAttributes}</p>\n            </div>\n        );\n    };\n\n\n    return (\n        <div>\n            <h2>Classes:</h2>\n            <div>\n                {Object.keys(CLASS_LIST).map((className) => (\n                    <div key={className} style={{ color: meetsRequirements(className) ? 'red' : 'white' }} onClick={() => handleClick(className)}>\n                        {className}\n                    </div>\n                ))}\n            </div>\n            {selectedClass && (\n                <div>\n                    <h3>Minimum Requirements for {selectedClass}</h3>\n                   \n                        {Object.entries(CLASS_LIST[selectedClass]).map(([attribute, value]) => (\n                            <div key={attribute}>\n                                {attribute}: {value}\n                            </div>\n                        ))}\n                    \n                </div>\n            )}\n        </div>\n\n    \n    );\n}\n\n\nexport default Classes"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,UAAU,QAAQ,cAAc;AAAC;AAE1D,SAASC,OAAO,OAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAW,CAAC;EAE3B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMC,iBAAiB,GAAIC,SAAS,IAAK;IACrC,MAAMC,iBAAiB,GAAGR,UAAU,CAACO,SAAS,CAAC;IAC/C,KAAK,MAAM,CAACE,SAAS,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACJ,iBAAiB,CAAC,EAAE;MAChE,IAAIN,UAAU,CAACO,SAAS,CAAC,GAAGC,KAAK,EAAE;QAC/B,OAAO,KAAK;MAChB;IACJ;IACA,OAAO,IAAI;EACf,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAMG,WAAW,GAAIN,SAAS,IAAK;IAC/B,MAAMC,iBAAiB,GAAGR,UAAU,CAACO,SAAS,CAAC;IAC/C,MAAMO,kBAAkB,GAAG,CAAC,CAAC;IAC7B,KAAK,MAAML,SAAS,IAAIV,cAAc,EAAE;MACpC,IAAIS,iBAAiB,CAACC,SAAS,CAAC,EAAE;QAC9BK,kBAAkB,CAACL,SAAS,CAAC,GAAGD,iBAAiB,CAACC,SAAS,CAAC;MAChE,CAAC,MAAM;QACHK,kBAAkB,CAACL,SAAS,CAAC,GAAG,CAAC;MACrC;IACJ;IACAL,gBAAgB,CAACG,SAAS,CAAC;IAC3BQ,OAAO,CAACC,GAAG,CAAE,GAAET,SAAU,gBAAe,EAAEO,kBAAkB,CAAC;IAC7D,oBACI;MAAA,uBACI;QAAA,WAAIP,SAAS,EAAC,IAAE,EAACO,kBAAkB;MAAA;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACtC;EAEd,CAAC;EAGD,oBACI;IAAA,wBACI;MAAA,UAAI;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK,eACjB;MAAA,UACKH,MAAM,CAACM,IAAI,CAACjB,UAAU,CAAC,CAACkB,GAAG,CAAEX,SAAS,iBACnC;QAAqB,KAAK,EAAE;UAAEY,KAAK,EAAEb,iBAAiB,CAACC,SAAS,CAAC,GAAG,KAAK,GAAG;QAAQ,CAAE;QAAC,OAAO,EAAE,MAAMM,WAAW,CAACN,SAAS,CAAE;QAAA,UACxHA;MAAS,GADJA,SAAS;QAAA;QAAA;QAAA;MAAA,QAGtB;IAAC;MAAA;MAAA;MAAA;IAAA,QACA,EACLJ,aAAa,iBACV;MAAA,wBACI;QAAA,WAAI,2BAAyB,EAACA,aAAa;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,EAE5CQ,MAAM,CAACC,OAAO,CAACZ,UAAU,CAACG,aAAa,CAAC,CAAC,CAACe,GAAG,CAAC;QAAA,IAAC,CAACT,SAAS,EAAEC,KAAK,CAAC;QAAA,oBAC9D;UAAA,WACKD,SAAS,EAAC,IAAE,EAACC,KAAK;QAAA,GADbD,SAAS;UAAA;UAAA;UAAA;QAAA,QAEb;MAAA,CACT,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAGb;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAId;AAAC,GAxEQR,OAAO;AAAA,KAAPA,OAAO;AA2EhB,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
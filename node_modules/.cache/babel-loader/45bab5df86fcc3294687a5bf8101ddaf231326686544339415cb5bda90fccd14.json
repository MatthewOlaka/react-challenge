{"ast":null,"code":"var _jsxFileName = \"/Users/matthew/Desktop/pm-test-react-2/src/components/Skills/Skills.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Skills = props => {\n  _s();\n  const {\n    skills,\n    attributes,\n    abilityModifiers,\n    skillPoints,\n    setSkillPoints\n  } = props;\n  const [totalPoints, setTotalPoints] = useState(0);\n  const handleInc = skill => {\n    if (totalPoints > 0) {\n      const updatedSkillPoints = {\n        ...skillPoints\n      };\n      updatedSkillPoints[skill] += 1;\n      setSkillPoints(updatedSkillPoints);\n      setTotalPoints(totalPoints - 1);\n    }\n\n    // const updatedSkillPoints = { ...skillPoints, [skill]: skillPoints[skill] + 1, };\n    // setSkillPoints(updatedSkillPoints)\n  };\n\n  const handleDec = skill => {\n    const updatedSkillPoints = {\n      ...skillPoints\n    };\n    updatedSkillPoints[skill] -= 1;\n    setSkillPoints(updatedSkillPoints);\n    setTotalPoints(totalPoints + 1);\n  };\n  useEffect(() => {\n    const intModifier = modifierCalc(attributes.Intelligence);\n    const totPoints = 10 + 4 * intModifier;\n    setTotalPoints(totPoints);\n  }, [attributes.Intelligence]);\n  const modifierCalc = attribute => {\n    let attModifier = 0;\n    if (attribute > 9) {\n      attModifier = Math.floor((attribute - 10) / 2);\n    }\n    return attModifier;\n  };\n\n  //console.log(skillPoints)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Skills:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Total Points available: \", totalPoints]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), skills.map(skill => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [skill.name, \" - points: \\xA0\", skillPoints[skill.name], \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleInc(skill.name),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), \"\\xA0\", skillPoints[skill.name] > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDec(skill.name),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this), \"\\xA0 modifier: \", abilityModifiers[skill.attributeModifier], \"\\xA0 total: \", abilityModifiers[skill.attributeModifier] + skillPoints[skill.name]]\n    }, skill.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n};\n_s(Skills, \"GGsiy8dhPB67s9Mfq3uOiq+O1OU=\");\n_c = Skills;\nexport default Skills;\nvar _c;\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"names":["React","useEffect","useState","Skills","props","skills","attributes","abilityModifiers","skillPoints","setSkillPoints","totalPoints","setTotalPoints","handleInc","skill","updatedSkillPoints","handleDec","intModifier","modifierCalc","Intelligence","totPoints","attribute","attModifier","Math","floor","map","name","attributeModifier"],"sources":["/Users/matthew/Desktop/pm-test-react-2/src/components/Skills/Skills.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst Skills = (props) => {\n\n    const { skills, attributes, abilityModifiers, skillPoints, setSkillPoints } = props\n\n    const [totalPoints, setTotalPoints] = useState(0)\n\n\n    const handleInc = (skill) => {\n        if (totalPoints > 0) {\n            const updatedSkillPoints = { ...skillPoints }\n            updatedSkillPoints[skill] += 1\n            setSkillPoints(updatedSkillPoints)\n\n            setTotalPoints(totalPoints - 1)\n        }\n\n        // const updatedSkillPoints = { ...skillPoints, [skill]: skillPoints[skill] + 1, };\n        // setSkillPoints(updatedSkillPoints)\n    }\n    const handleDec = (skill) => {\n        \n            const updatedSkillPoints = { ...skillPoints }\n            updatedSkillPoints[skill] -= 1\n            setSkillPoints(updatedSkillPoints)\n            setTotalPoints(totalPoints + 1)\n   \n    }\n\n\n    useEffect(() => {\n        const intModifier = modifierCalc(attributes.Intelligence)\n        const totPoints = 10 + (4 * intModifier)\n        setTotalPoints(totPoints)\n    }, [attributes.Intelligence])\n\n    const modifierCalc = (attribute) => {\n        let attModifier = 0\n        if (attribute > 9) {\n            attModifier = Math.floor((attribute - 10) / 2)\n        }\n        return attModifier\n\n    }\n\n\n\n    //console.log(skillPoints)\n\n\n\n    return (\n        <>\n            <h2>Skills:</h2>\n            <h3>Total Points available: {totalPoints}</h3>\n            {skills.map((skill) => (\n                <div key={skill.name}>{skill.name} -\n                    points:\n                    &nbsp;\n                    {skillPoints[skill.name]}\n                    &nbsp;\n                    <button onClick={() => handleInc(skill.name)}>+</button>\n                    &nbsp;\n                    { skillPoints[skill.name] > 0 ? \n                        <button onClick={() => handleDec(skill.name)}>-</button> :\n                        <button>-</button> \n                    }\n                    &nbsp;\n                    modifier: {abilityModifiers[skill.attributeModifier]}\n                    &nbsp;\n                    total: {abilityModifiers[skill.attributeModifier] + skillPoints[skill.name]}\n                </div>\n            ))}\n        </>\n\n    )\n}\n\nexport default Skills"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAElD,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAAA;EAEtB,MAAM;IAAEC,MAAM;IAAEC,UAAU;IAAEC,gBAAgB;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGL,KAAK;EAEnF,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAGjD,MAAMU,SAAS,GAAIC,KAAK,IAAK;IACzB,IAAIH,WAAW,GAAG,CAAC,EAAE;MACjB,MAAMI,kBAAkB,GAAG;QAAE,GAAGN;MAAY,CAAC;MAC7CM,kBAAkB,CAACD,KAAK,CAAC,IAAI,CAAC;MAC9BJ,cAAc,CAACK,kBAAkB,CAAC;MAElCH,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACnC;;IAEA;IACA;EACJ,CAAC;;EACD,MAAMK,SAAS,GAAIF,KAAK,IAAK;IAErB,MAAMC,kBAAkB,GAAG;MAAE,GAAGN;IAAY,CAAC;IAC7CM,kBAAkB,CAACD,KAAK,CAAC,IAAI,CAAC;IAC9BJ,cAAc,CAACK,kBAAkB,CAAC;IAClCH,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;EAEvC,CAAC;EAGDT,SAAS,CAAC,MAAM;IACZ,MAAMe,WAAW,GAAGC,YAAY,CAACX,UAAU,CAACY,YAAY,CAAC;IACzD,MAAMC,SAAS,GAAG,EAAE,GAAI,CAAC,GAAGH,WAAY;IACxCL,cAAc,CAACQ,SAAS,CAAC;EAC7B,CAAC,EAAE,CAACb,UAAU,CAACY,YAAY,CAAC,CAAC;EAE7B,MAAMD,YAAY,GAAIG,SAAS,IAAK;IAChC,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAID,SAAS,GAAG,CAAC,EAAE;MACfC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACH,SAAS,GAAG,EAAE,IAAI,CAAC,CAAC;IAClD;IACA,OAAOC,WAAW;EAEtB,CAAC;;EAID;;EAIA,oBACI;IAAA,wBACI;MAAA,UAAI;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK,eAChB;MAAA,WAAI,0BAAwB,EAACX,WAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,EAC7CL,MAAM,CAACmB,GAAG,CAAEX,KAAK,iBACd;MAAA,WAAuBA,KAAK,CAACY,IAAI,EAAC,iBAG9B,EAACjB,WAAW,CAACK,KAAK,CAACY,IAAI,CAAC,EAAC,MAEzB;QAAQ,OAAO,EAAE,MAAMb,SAAS,CAACC,KAAK,CAACY,IAAI,CAAE;QAAA,UAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAS,QAExD,EAAEjB,WAAW,CAACK,KAAK,CAACY,IAAI,CAAC,GAAG,CAAC,gBACzB;QAAQ,OAAO,EAAE,MAAMV,SAAS,CAACF,KAAK,CAACY,IAAI,CAAE;QAAA,UAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAS,gBACxD;QAAA,UAAQ;MAAC;QAAA;QAAA;QAAA;MAAA,QAAS,EACrB,iBAES,EAAClB,gBAAgB,CAACM,KAAK,CAACa,iBAAiB,CAAC,EAAC,cAE9C,EAACnB,gBAAgB,CAACM,KAAK,CAACa,iBAAiB,CAAC,GAAGlB,WAAW,CAACK,KAAK,CAACY,IAAI,CAAC;IAAA,GAdrEZ,KAAK,CAACY,IAAI;MAAA;MAAA;MAAA;IAAA,QAgBvB,CAAC;EAAA,gBACH;AAGX,CAAC;AAAA,GA3EKtB,MAAM;AAAA,KAANA,MAAM;AA6EZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}